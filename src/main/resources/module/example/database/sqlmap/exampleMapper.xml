<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.windf.module.example.dao.ExampleDao">

     <select id="count" parameterType="java.util.HashMap" resultType="long" >
       SELECT
			count(id)
		FROM 
			example e 
		WHERE 1=1
		 <if test="name != null">    
	        and name like CONCAT('%',#{name},'%')
	    </if>    
    </select>
    
     <select id="list" parameterType="java.util.HashMap" resultType="java.util.HashMap" >
       SELECT
			id, name, age, nick_name nickName
		FROM 
			example e
		WHERE 1=1
		<if test="param1 != null and param1.name != null">    
	        and name like CONCAT('%',#{param1.name},'%')
	    </if>
		<if test="param1 != null and param1.nickName != null">    
	        and nick_name like CONCAT('%',#{param1.nickName},'%')
	    </if>
		<if test="param1 != null and param1.age != null">
	        and age like CONCAT('%',#{param1.age},'%')
	    </if>
	    <if test="param2 != null and param3 != null"> 
	     LIMIT #{param2}, #{param3}
	    </if>
    </select>
    
    <select id="find" parameterType="string" resultType="java.util.HashMap" >
     	 select  	id, name, age, nick_name nickName
     	 from example
     	 where id = #{param1}
    </select>
    
    <insert id="insert" parameterType="java.util.HashMap" keyProperty="id">
       INSERT INTO example (id, name, nick_name, age)
		VALUES
			(replace(UUID(), '-', '') ,#{name}, #{nickName} ,#{age})
    </insert>
    
    <update id="update" parameterType="java.util.HashMap" >
        update example set name = #{name}, nick_name = #{nickName} , age = #{age} 
        where id = #{id}
    </update>
    
    <delete id="delete" parameterType="List" >
        delete from example where id in
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">  
		  #{item}  
		 </foreach> 
    </delete>
   
</mapper>